---
assert(if (a < b) a == b else if (b < a) b == a else false)
           | | |                  | | |  | |  |
           2 | 1                  1 | 2  1 |  2
             false                  true   Expected <1>, actual <2>.
---
---
assert(if (a < b) a == b else if (b < a) b == a else false)
           | | |  | |  |
           1 | 2  1 |  2
             true   Expected <1>, actual <2>.
---
---
assert(if (a < b) a == b else if (b < a) b == a else false)
           | | |                  | | |
           1 | 1                  1 | 1
             false                  false
---
---
assert(a + (if (a < b) a else b) + b == a)
       | |      | | |  |         | | |  |
       1 2      1 | 2  1         4 2 |  1
                  true               Expected <4>, actual <1>.
---
---
assert(a + (if (a < b) a else b) + b == a)
       | |      | | |         |  | | |  |
       2 3      2 | 1         1  4 1 |  2
                  false              Expected <4>, actual <2>.
---
---
assert(
    when {
        a < b -> a == b
        | | |
        2 | 1
          false

        b < a -> b == a
        | | |    | |  |
        1 | 2    1 |  2
          true     Expected <1>, actual <2>.

        else -> false
    }
)
---
---
assert(
    when {
        a < b -> a == b
        | | |    | |  |
        1 | 2    1 |  2
          true     Expected <1>, actual <2>.

        b < a -> b == a
        else -> false
    }
)
---
---
assert(
    when {
        a < b -> a == b
        | | |
        1 | 1
          false

        b < a -> b == a
        | | |
        1 | 1
          false

        else -> false
    }
)
---
---
assert(
    initial && when {
    |
    true

        a < b -> a == b
        | | |
        2 | 1
          false

        b < a -> b == a
        | | |    | |  |
        1 | 2    1 |  2
          true     Expected <1>, actual <2>.

        else -> false
    }
)
---
---
assert(
    initial && when {
    |
    true

        a < b -> a == b
        | | |    | |  |
        1 | 2    1 |  2
          true     Expected <1>, actual <2>.

        b < a -> b == a
        else -> false
    }
)
---
---
assert(
    initial && when {
    |
    true

        a < b -> a == b
        | | |
        1 | 1
          false

        b < a -> b == a
        | | |
        1 | 1
          false

        else -> false
    }
)
---
---
assert(
    initial && when {
    |
    false

        a < b -> a == b
        b < a -> b == a
        else -> false
    }
)
---
